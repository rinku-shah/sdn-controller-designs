1. TurboEPC-Basic
    This is a 4 chain experiment. Each chain consists of RAN, DGW and SGW. ALl the chains share the same PGW and root controller.
    Every SGW switch has a local ONOS controller running on it.
    RUN steps:
    1. on the base machine, create all bridges using the ~/bridge_init.sh script
    2. start the containers using the container start script
    3. ssh into all the containers on terminator using 10.0.3.* IPs (deafult username:ubuntu passworsd:ubuntu)
    4. on the root container :
        a. cd ~/onos 
        b. ./run_onos.sh
    5. To connect the individual switches to root, follow thses steps for DGW1,DGW2.DGW3,DGW4,PGW switches:
        a. cd ~/scripts
        b. ./run_switch_wo_log.sh // this will start the bmv2 switches
    6. To connect the SGW1,SGW2,SGW3,SGW4 switches we will pin the switch process to respective CPU cores 
       The CPU_NUMBER for SGW1,SGW2,SGW3,SGW4 are 25,27,29,31 respectively
        a. cd ~/scripts
        b. taskset -c <CPU_NUMBER> ./run_switch_wo_log.sh // this will start the bmv2 switch process 
    7. once all the switches are started, we need to connect them to root controller in specific order 
       to connect to root controller go to terminal of each switch and run the following commands
        a. cd ~/scripts
        b. python con.py  // this will connect the switch to the root controller  
       Repeat steps 7a and 7b for all the switches in this order: DGW1,DGW2,DGW3,DGW4,PGW,SGW1,SGW2,SGW3,SGW4
    8. Next we need to start the local ONOS at each SGW1,SGW2,SGW3,SGW4
       We will PIN the onos controller to a specific CPU core in SGWs
       The CPU_NUMBER for SGW1,SGW2,SGW3,SGW4 are 24,26,28,30 respectively
       a. cd ~/onos 
       b. taskset -c <CPU_NUMBER> ./run_onos.sh
    9. Now we need to connect the DGW ang SGW switches to their respective local ONOS controller as well.
      To do so, follow thses commands on terminals of DGW1,SGW1,DGW2,SGW2,DGW3,SGW3,DGW4,SGW4
      a. cd ~/scripts
      b. python offload_con.py // this connects the switch to local controller
    
    10. once all the switches are connected to root contoller, bring up the onos CLI and activate epc app at the root controller terminal using the steps below:
       a. cd ~
       b. onos localhost
       c. onos cli> app activate org.onosproject.p4tutorial.epc
    11. Repeat step 10 for local controller running at SGW1,SGW2,SGW3,SGW4 as well

    12. For the SGW switch to generate a reply packet, we clone the packet so we need to add a directive on the switch CLI as well
     on each of SGWs, run the following commands:
       a. simple_switch_CLI --thrift-port 9090
       b. cli> mirroring_add 500 1  // 500 is the session ID and 1 is the egress port

    13. To start the ran Load Generator go to ran container terminal 
       a. cd ran_code/clone_bitwise_lg
       b. make
       c. sudo ./ran 1 1 0k // this will run ran for 1 thread for 1 minute 

